# Default values for huawei-csm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

##################################Follows are REQUIRED##################################
# all global values across charts go here
global:
  # the number of replicas of the pod.
  # if the replicaCount greater than 1, then the function of leader election will be enabled.
  replicaCount: 1
  imageRepo: <IMAGE_REPO_PATH>
  logging:
    module: file
    level: info
    fileSize: 20M
    maxBackups: 9
  # leaderElection configuration
  leaderElection:
    leaseDuration: "8s"
    renewDeadline: "6s"
    retryPeriod: "2s"
  # csiDriverName: the csi driver name
  # Default value: "csi.huawei.com"
  csiDriverName: "csi.huawei.com"
  # Allowed values:
  #   true: prefer to schedule pods with different services to different nodes
  #   false: use the default pod scheduling policy of Kubernetes
  # Default value: true
  # This field will be inactive when it conflicts with the nodeSelector.
  balancedDeploy: true
  # image pull policy for Huawei plugin container images, support [IfNotPresent, Always, Never]
  pullPolicy: IfNotPresent
  # Uses secrets to pull images from private container image registry or repository
  imagePullSecrets: []
  # Default installation namespace of the huawei-csm plugin
  namespace: huawei-csm
  # Namespace where the csiDriver is located
  csiDriverNamespace: huawei-csi

# all supported features
features:
  # prometheusCollector: allowed prometheus use the storage to collect metrics
  prometheusCollector:
    # Allowed values:
    #   true: enable prometheus collect feature
    #   false: disable prometheus collect feature
    # Default value: true
    enabled: true
    # nodePort: port the containers are provided to the prometheus
    # Default value: 30074
    nodePort: 30074
    # prometheusCollectorSSL: parameters required to start https
    prometheusCollectorSSL:
      # Allowed values:
      #   true: enable https, when set it certPath and keyPath must set
      #   false: disable https, use http
      # Default value: true
      enabled: true
      # The Path of cert, need to be placed in the huawei-csm directory
      certPath: ""
      # The Path of key, need to be placed in the huawei-csm directory
      keyPath: ""
    # nodeSelector: Define node selection constraints for prometheusCollector pods.
    # For the pod to be eligible to run on a node, the node must have each
    # of the indicated key-value pairs as labels.
    # Leave as blank to consider all nodes
    # Allowed values: map of key-value pairs
    # Default value: None
    nodeSelector:
    # Uncomment if you wish the service scheduled to the node with Specific Labels
    #  kubernetes.io/hostname: ""
    # Tolerations allow the scheduler to schedule pods with matching taints
    tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 15
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 15
    # affinity: constrain which nodes your Pod can be scheduled on based on node labels
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - csm-storage-service
              topologyKey: kubernetes.io/hostname
            weight: 100

  # storageTopo: allow to provision pv/pod to storage.
  storageTopo:
    # Allowed values:
    #   true: enable prometheus collect feature
    #   false: disable prometheus collect feature
    # Default value: true
    enabled: true
    # rtRetryInterval: the max delay for retrying a rt task
    # Default value: "5m"
    rtRetryMaxDelay: "5m"
    # pvRetryIntervalMax: the max delay for retrying a pv task
    # Default value: "1m"
    pvRetryMaxDelay: "1m"
    # podRetryInterval: the max delay for retrying a pod task
    # Default value: "1m"
    podRetryMaxDelay: "1m"
    # resyncPeriod: the interval for refreshing the resourceTopologies on the cluster
    # Default value: "15m"
    resyncPeriod: "15m"
    # nodeSelector: Define node selection constraints for storageTopo pods.
    # For the pod to be eligible to run on a node, the node must have each
    # of the indicated key-value pairs as labels.
    # Leave as blank to consider all nodes
    # Allowed values: map of key-value pairs
    # Default value: None
    nodeSelector:
    # Uncomment if you wish the service scheduled to the node with Specific Labels
    #  kubernetes.io/hostname: ""
    # Tolerations allow the scheduler to schedule pods with matching taints
    tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 15
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 15
    # affinity: constrain which nodes your Pod can be scheduled on based on node labels
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - csm-prometheus-service
              topologyKey: kubernetes.io/hostname
            weight: 100

cluster:
  name: "kubernetes"

images:
  prometheusCollector: csm-prometheus-collector:{{version}}
  topoService: csm-topo-service:{{version}}
  containerMonitorInterface: csm-cmi:{{version}}
  livenessProbe: csm-liveness-probe:{{version}}

# Specify the amount of CPU and memory resources that a container requires
containerResourcesSet:
# To disable the default configuration, comment out the following section.
  prometheusService:
    livenessProbe:
      requests:
        cpu: 10m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
    prometheusCollector:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 512Mi
    cmiController:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 512Mi
  storageService:
    livenessProbe:
      requests:
        cpu: 10m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
    cmiController:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 512Mi
    topoService:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 512Mi

# The parameter service used to configure dual-IP protocol stack.
# ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
service:
  # ipFamilyPolicy: define csm-prometheus-service service IP policy
  # Allowed values:
  #   SingleStack: Single-stack service. The control plane allocates a cluster IP for the Service, using the first configured service cluster IP range.
  #   PreferDualStack: Allocates both IPv4 and IPv6 cluster IPs for the Service when dual-stack is enabled. If dual-stack is not enabled or supported, it falls back to single-stack behavior.
  #   RequireDualStack: Allocates Service .spec.clusterIPs from both IPv4 and IPv6 address ranges when dual-stack is enabled. If dual-stack is not enabled or supported, the Service API object creation fails.
  # Default value: SingleStack
  ipFamilyPolicy: SingleStack
  # ipFamilies: indicate the list of supported IP protocols.
  # Allowed values: the list of IP protocols, whose elements can contain only IPv4 and IPv6.
  # Default value: -IPv4
  ipFamilies:
    - IPv4
    # - IPv6
